name: Build RootFS

on:
  workflow_dispatch:
  schedule:
    - cron: 3 2 3 * *

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: config/lede.config
  DIY_SCRIPT: custom/lede.sh
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Canada/Atlantic
  FILE_NAME: OpenWrt RootFS AArch64

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: true

        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - name: Checkout
      uses: actions/checkout@main

    - name: Check The VM
      run: |
        echo "⚠ Warning ⚠"
        echo -e "Known CPU Models (Descending Order): 8370C, 8272CL, 8171M, E5-2673 \n"
        echo "--------------------------CPU--------------------------"
        echo "CPU Core: $(cat /proc/cpuinfo | grep "physical id" | sort | uniq | wc -l)"
        echo -e "information: $(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo "--------------------------RAM--------------------------"
        echo "Installed RAM Details: "
        echo -e "$(sudo lshw -short -C memory | grep GiB) \n"
        echo "--------------------------Disk--------------------------"
        echo "HDD Details: $(ls /dev/sd* | grep -v [1-9] | wc -l)" && df -hT

    - name: INIT Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -y update
        sudo -E apt-get -y install $(curl -fsSL https://tinyurl.com/mr3bbz7c)
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get -y clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        df -Th

    - name: Clone Repository
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 -b $REPO_BRANCH $REPO_URL openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Install Feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Custom Config
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SCRIPT
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_SCRIPT

    - name: Download DL
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile RootFS
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Display Disk Space
      if: always()
      run: df -hT

    - name: Organize Files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages feeds.buildinfo version.buildinfo *.manifest *.bin *.img *.vmdk
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Push Tag
      id: tag
      run: |
        echo "NEW_TAG=$(date +"%Y%m%d%H%M")" >> $GITHUB_OUTPUT

    - name: Upload Files
      id: release
      uses: ncipollo/release-action@v1
      with:
        name: ${{ env.FILE_NAME }}
        allowUpdates: true
        tag: ${{ steps.tag.outputs.NEW_TAG }}
        commit: main
        token: ${{ secrets.RELEASES_TOKEN }}
        artifacts: ${{ env.FIRMWARE }}/*
        body: The OpenWrt RootFS for AArch64 (ARM64-v8a)
